# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

GET     /                                controllers.Application.index()
GET     /wizard                          controllers.Application.wizard()
POST    /wizard                          controllers.Application.doWizard()
GET     /signup                          controllers.Application.signup(group: Boolean ?= false)
POST    /signup                          controllers.Application.doSignup()

GET     /signin                          controllers.Application.signin()
POST    /signin                          controllers.Application.doSignin()

GET     /signout                         controllers.Application.signout()

GET     /portal                          controllers.Application.dashboard()

GET     /*path/                          controllers.Application.untrail(path: String)

############################# Organization ###############################

GET     /portal/o               controllers.organization.Organization.index()
GET     /portal/o/b             controllers.organization.Organization.body()
GET     /portal/o/aj            controllers.organization.Organization.indexAjax()
GET     /portal/o/fl/:nav       controllers.organization.Organization.filter(nav)

############################# Group Action ###############################

GET     /portal/o/g/n           controllers.organization.GroupAction.newGroup()
GET     /portal/o/g/n/c         controllers.organization.GroupAction.doCreate()
GET     /portal/o/g/n/b         controllers.organization.GroupAction.newGroupBody()
GET     /portal/o/g/i           controllers.organization.GroupAction.invite()
GET     /portal/o/g/a           controllers.organization.GroupAction.addUser()
GET     /portal/o/g/d/:g        controllers.organization.GroupAction.deleteGroup(g)
GET     /portal/o/g/e/:g        controllers.organization.GroupAction.editGroup(g)
GET     /portal/o/g/de/:g       controllers.organization.GroupAction.doEditGroup(g)
GET     /portal/invite/:u/:r/:g controllers.organization.Invitation.index(u, r, g)

############################## User Action ###############################

GET     /portal/o/u/a/:u           controllers.organization.UserAction.approve(u)
GET     /portal/o/u/r/:u           controllers.organization.UserAction.remove(u)
GET     /portal/o/u/ina/:u         controllers.organization.UserAction.inactive(u)
GET     /portal/o/u/ac/:u          controllers.organization.UserAction.active(u)
GET     /portal/o/u/e/:u           controllers.organization.UserAction.editRoleIndex(u)
GET     /portal/o/u/de/:u          controllers.organization.UserAction.doEditRole(u)
GET     /portal/o/u/l/:u           controllers.organization.UserAction.leaveCurrentGroup(u)
GET     /portal/o/u/s              controllers.organization.UserAction.createUserSystem()
POST    /portal/o/u/s/c            controllers.organization.UserAction.doCreateUserSystem()

############################## Role Action ################################

GET     /portal/o/r/n              controllers.organization.RoleAction.addRole()
GET     /portal/o/r/da             controllers.organization.RoleAction.doAddRole()
GET     /portal/o/r/e/:r           controllers.organization.RoleAction.editRole(r)
GET     /portal/o/r/de/:r          controllers.organization.RoleAction.doEditRole(r)
GET     /portal/o/r/d/:r           controllers.organization.RoleAction.deleteRole(r)
GET     /portal/o/p/:r/:p          controllers.organization.RoleAction.removePermission(r, p)

############################## Feature ####################################
GET     /portal/o/f/u/:active      controllers.organization.FeatureAction.updateFeatureList(active)
GET     /portal/o/f/e/:f           controllers.organization.FeatureAction.enableFeature(f)
GET     /portal/o/f/d/:f           controllers.organization.FeatureAction.disableFeature(f)

############################# Dashboard ##################################

GET     /portal/dashboard          controllers.Dashboard.body()
GET     /portal/dashboard/g/:g     controllers.Dashboard.changeGroup(g)
GET     /portal/dashboard/profile  controllers.Dashboard.updateProfile()

############################# Virtual Machine ############################

GET     /portal/vm                 controllers.vm.VMController.index()
POST    /portal/vm/wizard          controllers.vm.VMController.doWizard()
GET     /portal/vm/s/:g/:s         controllers.vm.VMController.vmStatus(g, s)
GET     /portal/vm/c/:i            controllers.vm.VMController.viewConsoleURL(i)
POST    /portal/vm/u               controllers.vm.VMController.updateVMProperties()
GET     /portal/vm/a/:a/:i         controllers.vm.VMController.vmAction(a, i)
GET     /portal/vm/so              controllers.vm.VMController.getOfferings()
GET     /portal/vm/o               controllers.vm.VMController.offeringView()
GET     /portal/vm/n/:g            controllers.vm.VMController.normalVMView(g)
GET     /portal/vm/cr/:b/:g        controllers.vm.VMController.createrNormalVM(g, b: Boolean)  
GET     /portal/vm/l/:g/:s         controllers.vm.VMController.vmLog(g, s)
POST    /portal/vm/o/c/:g          controllers.vm.VMController.saveOffering(g)      

############################# Mock #######################################

GET     /portal/foo                controllers.mock.FooFeature.index()
GET     /portal/foo/a1             controllers.mock.FooFeature.doAction1()
GET     /portal/foo/a2             controllers.mock.FooFeature.doAction2()   
GET     /portal/foo/a3             controllers.mock.FooFeature.doAction3()

GET     /portal/bar                controllers.mock.BarFeature.index()
GET     /portal/bar/a1             controllers.mock.BarFeature.doAction1()
GET     /portal/bar/a2             controllers.mock.BarFeature.doAction2()   
GET     /portal/bar/a3             controllers.mock.BarFeature.doAction3()

GET     /portal/juu                controllers.mock.JuuFeature.index()
GET     /portal/juu/a1             controllers.mock.JuuFeature.doAction1()
GET     /portal/juu/a2             controllers.mock.JuuFeature.doAction2()   
GET     /portal/juu/a3             controllers.mock.JuuFeature.doAction3()


############################# Demostration ###############################
GET     /demo                            controllers.demo.Application.index()
GET     /demo/signin                     controllers.demo.Application.signin()

#VM
GET     /demo/vm                         controllers.demo.vm.VMController.list(fure: java.lang.Boolean)
GET     /demo/vm/new                     controllers.demo.vm.VMController.create()
POST    /demo/vm/new                     controllers.demo.vm.VMController.doCreate()
GET     /demo/vm/destroy/:name           controllers.demo.vm.VMController.destroy(name)
GET     /demo/vm/ajax                    controllers.demo.vm.VMController.ajax()
GET     /demo/vm/detail/:id              controllers.demo.vm.VMController.detail(id)
GET     /demo/vm/console/:name           controllers.demo.vm.VMController.console(name)
GET     /demo/vm/status/:name            controllers.demo.vm.VMController.status(name)
GET     /demo/vm/log/:name               controllers.demo.vm.VMController.log(name)

#Job
GET     /demo/job                        controllers.demo.job.JobController.list(jobType)
GET     /demo/job/create                 controllers.demo.job.JobController.create(jobType, jobName)
POST    /demo/job/create                 controllers.demo.job.JobController.doCreate()
POST    /demo/job/edit/:jobName          controllers.demo.job.JobController.edit(jobName)
GET     /demo/job/remove/:jobName        controllers.demo.job.JobController.remove(jobName)
GET     /demo/job/ajax                   controllers.demo.job.JobController.ajax()
GET     /demo/job/status/:jobName        controllers.demo.job.JobController.checkStatus(jobName)
GET     /demo/job/console/:jobName       controllers.demo.job.JobController.console(jobName)
############################################################################

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
GET     /fonts/*file                controllers.Assets.at(path="/public/fonts", file)
GET     /images/*file               controllers.Assets.at(path="/public/images", file)
